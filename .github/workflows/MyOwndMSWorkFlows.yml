name: SonarCloud

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: WebshopDatabase
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x

      - name: Restore dependencies
        run: dotnet restore WebShopRestService/WebShopRestService.csproj

      - name: Apply migration.sql to MySQL
        run: |
          sudo apt-get install -y mysql-client
          mysql -h127.0.0.1 -P3306 -uroot -p${{ secrets.MYSQL_ROOT_PASSWORD }} WebshopDatabase < WebShopRestService/Data/CreateScript.sql
          mysql -h127.0.0.1 -P3306 -uroot -p${{ secrets.MYSQL_ROOT_PASSWORD }} WebshopDatabase < WebShopRestService/Data/InsertScript.sql

      - name: Install SonarScanner and Coverlet
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet tool install --global coverlet.console

      - name: Begin SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin /k:"MikkelYtting_WebShopRestService" /o:"mikkelytting" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"

      - name: Build
        run: dotnet build --no-restore WebShopRestService/WebShopRestService.csproj

      - name: Run Tests with Coverage
        env:
          TEST_CONNECTION_STRING: "Server=localhost;Database=WebshopDatabase;User ID=root;Password=${{ secrets.MYSQL_ROOT_PASSWORD }};SslMode=none;"
        run: |
          dotnet test --no-restore --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover WebShopRestService-IntegrationTest/WebShopRestService-IntegrationTest.csproj

      - name: End SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
