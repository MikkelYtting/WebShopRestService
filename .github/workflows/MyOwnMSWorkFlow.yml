name: .NET CI

on: [push]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      sql-server:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          SA_PASSWORD: "YourHardcodedPassword" # Hardcoded password
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0'

    - name: Install SQL Server command-line tools
      run: |
        sudo apt-get update
        sudo apt-get install -y mssql-tools unixodbc-dev

    - name: Wait for SQL Server to become available
      run: |
        timeout=90 # Set a timeout of 90 seconds for SQL Server to start
        until /opt/mssql-tools/bin/sqlcmd -S localhost,1433 -U SA -P YourHardcodedPassword -Q "SELECT 1" > /dev/null 2>&1; do
          echo "Waiting for SQL Server to start..."
          sleep 5
          timeout=$((timeout-5))
          if [ "$timeout" -le 0 ]; then
            echo "SQL Server did not start in time. Fetching logs..."
            docker logs sql-server
            exit 1
          fi
        done
        echo "SQL Server is up and running!"

    - name: Create Temporary Database
      run: |
        dbName="TempDB_$(date +%s)"
        /opt/mssql-tools/bin/sqlcmd -S localhost,1433 -U SA -P YourHardcodedPassword -Q "CREATE DATABASE [$dbName];"

    - name: Build project
      run: dotnet build --configuration Release WebShopRestService

    - name: Run integration tests
      env:
        TEST_CONNECTION_STRING: "Server=localhost,1433;Database=$dbName;User ID=SA;Password=YourHardcodedPassword;TrustServerCertificate=True;"
      run: dotnet test --verbosity normal WebShopRestService-IntegrationTest/WebShopRestService-IntegrationTest.csproj
